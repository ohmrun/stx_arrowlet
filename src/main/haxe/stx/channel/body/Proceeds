package stx.channel.body;


class Proceeds extends Clazz{
  @:noUsing public function forward<I,O,E>(arw:Arrowlet<Noise,Res<O,E>>):IO<O,E>{
    return IO.fromIODef(
      (auto:Automation, next:Res<O,E>->Void)-> auto.snoc(arw.prepare(Noise,next))
    );
  }  
  @:noUsing public function postfix<I,O,Z,E>(self:Proceed<O,E>,fn:O->Z):Proceed<Z,E>{
    return self.then(
      Arrowlet.fromFun1R(
        (oc) -> oc.map(fn)
      )
    );
  }
  public function errata<O,E,EE>(self:Proceed<O,E>,fn):Proceed<O,EE>{
    return self.then(
      Arrowlet.fromFun1R(
        (oc) -> oc.errata(fn)
      )
    );
  }
}